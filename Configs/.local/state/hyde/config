export ID="hydeproject"
export OWNER="The HyDE Project"
export VERSION="0.1.0"
export DOTS=("hyde")
export DEFAULT_ACTION="preserve"
export USER_HOME="${HOME}"
export PACKAGE_MANAGER=("pacman" "yay" "flatpak")
export REPOSITORY="https://github.com/HyDE-Project/HyDE.git"
export START_COMMAND=("echo 'Starting Deez-Dots for HydE'")
export END_COMMAND=("echo 'Command ends'")
export DEPENDENCY_YAY,PARU=("hyde-cli-git")
export DEPENDENCY_FLATPAK=("dev.vencord.Vesktop")
export DEPENDENCY_PACMAN=("hyprland" "pipewire" "pipewire-pulse" "pipewire-jack" "pipewire-alsa" "gst-plugin-pipewire" "wireplumber" "pavucontrol")
export DEPENDENCY_DNF=("another-dependency")
export HYDE_ACTION="preserve"
export HYDE_PRE_COMMAND=("echo 'Pre commands for HyDE' ")
export HYDE_POST_COMMAND=("echo 'post cmds'")
export HYDE_DEPENDENCY_PACMAN=("hyprland" "nwg-look" "qt5ct" "qt6ct")
export HYDE_DEPENDENCY_DNF=("another-dependency")
export HYDE_FILES=("{'source_root': 'Configs/.config', 'target_root': '$XDG_CONFIG_HOME', 'paths': ['hyde/wallbash', 'hypr/hyprland.conf', 'hypr/windowrules.conf', 'hypr/keybindings.conf', 'hypr/monitors.conf', 'hypr/animations.conf', 'hypr/themes']}" "{'source_root': 'Configs/.config', 'target_root': '${XDG_CONFIG_HOME}', 'paths': ['gtk-3.0', 'Kvantum', 'nwg-look', 'qt5ct', 'qt6ct', 'xsettingsd']}" "{'source_root': 'Configs', 'target_root': '${HOME}', 'paths': '.gtkrc-2.0'}" "{'action': 'overwrite', 'source_root': 'Configs', 'target_root': '${HOME}', 'paths': ['.local/lib/hyde', '${XDG_DATA_HOME}/hyde']}" "{'action': 'sync', 'source_root': 'Configs/.local/share', 'target_root': '${XDG_DATA_HOME}', 'paths': ['icons/Wallbash-Icon', 'themes/Wallbash-Gtk']}")
export WAYBAR_PRE_COMMAND=("echo 'Pre commands '")
export WAYBAR_POST_COMMAND=("echo 'HyDE backed up!'")
export WAYBAR_DEPENDENCY_PACMAN=("waybar")
export WAYBAR_FILES=("{'target_root': '${XDG_CONFIG_HOME}/waybar', 'paths': ['config.ctl', 'modules', 'config.jsonc', 'theme.css', 'style.css']}")
export DUNST_PRE_COMMAND=("echo 'Pre commands '")
export DUNST_POST_COMMAND=("echo 'HyDE backed up!'")
export DUNST_DEPENDENCY_PACMAN=("dunst")
export DUNST_FILES=("{'source_root': 'dunst', 'target_root': '${XDG_CONFIG_HOME}', 'paths': 'dunst'}" "{'action': 'overwrite', 'target_root': '${HOME}.local/lib', 'paths': 'hyde/wallbash.dunst.sh'}")
export KITTY_PRE_COMMAND=("echo 'Pre commands '")
export KITTY_POST_COMMAND=("echo 'HyDE backed up!'")
export KITTY_DEPENDENCY_PACMAN=("kitty")
export KITTY_FILES=("{'source_root': 'kitty', 'target_root': '${XDG_CONFIG_HOME}', 'paths': 'kitty'}" "{'action': 'overwrite', 'source_root': 'kitty/hyde/wallbash/scripts', 'target_root': '${XDG_CONFIG_HOME}/hyde/wallbash/scripts', 'paths': 'kitty.sh'}")
export NVIDIA_PRE_COMMAND="echo 'Pre commands '"
export NVIDIA_POST_COMMAND="echo 'HyDE backed up!'"
export NVIDIA_FILES=("{'action': 'preserve', 'source_root': 'nvidia', 'target_root': '${XDG_CONFIG_HOME}/hypr', 'paths': 'nvidia.conf'}")
export NVIDIA_DEPENDENCY_PACMAN=("nvidia-utils" "nvidia")
export NVIDIA_DEPENDENCY_DNF=("another-dependency")
export ROFI_ACTION="preserve"
export ROFI_PRE_COMMAND="echo 'Pre commands '"
export ROFI_POST_COMMAND="echo 'HyDE backed up!'"
export ROFI_DEPENDENCY_PACMAN=("rofi")
export ROFI_FILES=("{'source_root': 'rofi', 'target_root': '${XDG_CONFIG_HOME}'}")
